"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.editorInterfaceLoadAndCreate = void 0;
const contentful_collection_1 = __importDefault(require("contentful-collection"));
const create_editor_interface_changeset_1 = require("./create-editor-interface-changeset");
const LIMIT = 100;
function getManyEditorInterface({ client, environmentId, spaceId, }) {
    return (0, contentful_collection_1.default)((options) => client.raw.get(`/spaces/${spaceId}/environments/${environmentId}/editor_interfaces`, {
        params: {
            limit: options.limit || LIMIT,
            skip: options.skip,
        },
    }));
}
async function editorInterfaceLoadAndCreate({ clients: { sourceEnvironmentClient, targetEnvironmentClient }, spaceId, sourceEnvironmentId, targetEnvironmentId, sourceContentModel, }) {
    const [sourceModel, targetModel] = await Promise.all([
        getManyEditorInterface({
            spaceId,
            client: sourceEnvironmentClient,
            environmentId: sourceEnvironmentId,
        }),
        getManyEditorInterface({
            spaceId,
            client: targetEnvironmentClient,
            environmentId: targetEnvironmentId,
        }),
    ]);
    return (0, create_editor_interface_changeset_1.createEditorInterfaceChangeset)({
        sourceModel,
        targetModel,
        sourceContentModel,
    });
}
exports.editorInterfaceLoadAndCreate = editorInterfaceLoadAndCreate;
