"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createChangesetForEntityCollection = void 0;
const create_entity_link_1 = require("./create-entity-link");
function createChangesetForEntityCollection({ sourceCollection, targetCollection, itemType, createEntityPatch, }) {
    const sourceIds = sourceCollection.map((item) => item.sys.id);
    const targetIds = targetCollection.map((item) => item.sys.id);
    const maybeChanged = sourceIds.filter((id) => targetIds.includes(id));
    const removed = targetIds.filter((id) => !sourceIds.includes(id));
    const added = sourceIds.filter((id) => !targetIds.includes(id));
    const changedItems = maybeChanged
        .map((id) => {
        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
        const sourceItem = sourceCollection.find((s) => s.sys.id === id);
        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
        const targetItem = targetCollection.find((s) => s.sys.id === id);
        return {
            changeType: 'update',
            entity: (0, create_entity_link_1.createEntityLink)(targetItem, itemType),
            patch: createEntityPatch(sourceItem, targetItem),
        };
    })
        .filter((item) => item.patch.length > 0);
    const addedItems = sourceCollection
        .filter((item) => added.includes(item.sys.id))
        .map((item) => {
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        const { sys, ...data } = item;
        return {
            changeType: 'add',
            entity: (0, create_entity_link_1.createEntityLink)(item, itemType),
            data,
        };
    });
    const removedItems = targetCollection
        .filter((item) => removed.includes(item.sys.id))
        .map((item) => ({
        changeType: 'delete',
        entity: (0, create_entity_link_1.createEntityLink)(item, itemType),
    }));
    return {
        sys: {
            type: 'Changeset',
        },
        items: [...addedItems, ...removedItems, ...changedItems],
    };
}
exports.createChangesetForEntityCollection = createChangesetForEntityCollection;
