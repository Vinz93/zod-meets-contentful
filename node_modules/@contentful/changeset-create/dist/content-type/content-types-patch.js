"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.contentTypesPatch = void 0;
const utils_1 = require("./utils");
const generate_json_patch_1 = require("generate-json-patch");
function contentTypesPatch({ sourceContentType, targetContentType, fieldIdMapForAll, }) {
    const contentTypeId = targetContentType.sys.id;
    const fieldIdMapForContentType = fieldIdMapForAll.get(contentTypeId);
    const fieldHashFunction = (0, utils_1.createFieldHash)(fieldIdMapForContentType);
    // eslint-disable-next-line @typescript-eslint/ban-ts-comment
    // @ts-ignore
    return (0, generate_json_patch_1.generateJSONPatch)(targetContentType, sourceContentType, {
        propertyFilter: function (name, context) {
            const { length } = (0, generate_json_patch_1.pathInfo)(context.path);
            // ignore sys prop on root level
            if (length === 1) {
                return !['sys'].includes(name);
            }
            return true;
        },
        objectHash: function (value, context) {
            const { length, segments } = (0, generate_json_patch_1.pathInfo)(context.path);
            // dedicated comparator for top-level `fields` property
            if (length === 2 && segments[1] === 'fields') {
                // eslint-disable-next-line @typescript-eslint/ban-ts-comment
                // @ts-ignore
                return fieldHashFunction(value, undefined, context.side);
            }
            return context.index.toString();
        },
        // array: { ignoreMove: true },
    });
}
exports.contentTypesPatch = contentTypesPatch;
